Given a m x n matrix, if an element is 0, set its entire row and column to 0. Do it in place.

click to show follow up.

Follow up:
Did you use extra space?
A straight forward solution using O(mn) space is probably a bad idea.
A simple improvement uses O(m + n) space, but still not the best solution.
Could you devise a constant space solution?
//用行列来记录0的状况，但列从第二列开始

class Solution {
public:
    void setZeroes(vector<vector<int>>& matrix) {
        bool firstC = false;
        auto row = matrix.size(), col = matrix[0].size();
        
        for (decltype(row) i = 0; i < row; i++){
            if (matrix[i][0] == 0) firstC = true;
            for (decltype(col) j = 1; j < col; j++)
            { 
                
                if (matrix[i][j] == 0) matrix[i][0] = matrix[0][j] = 0;
            }
        }
        
        for (int i = row - 1; i >= 0; i--){
            for (int j = col - 1; j > 0; j--)
                if (matrix[i][0] == 0 || matrix[0][j] == 0) matrix[i][j] = 0;
            if (firstC) matrix[i][0] = 0;
        }
    }
};