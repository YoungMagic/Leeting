The set [1,2,3,…,n] contains a total of n! unique permutations.

By listing and labeling all of the permutations in order,
We get the following sequence (ie, for n = 3):

"123"
"132"
"213"
"231"
"312"
"321"
Given n and k, return the kth permutation sequence.

Note: Given n will be between 1 and 9 inclusive.


class Solution {//如何找到第k个数，先从第一位考虑。
public:
    string getPermutation(int n, int k) {
        int pTable[10] = {1};
        for (int i = 1; i <= 9; i++)
            pTable[i] = i * pTable[i-1];
        string result;
        vector<char> numSet{'1', '2', '3', '4', '5', '6', '7', '8', '9'};
        while (n > 0)
        {
            int tmp = (k - 1) / pTable[n - 1];
            result += numSet[tmp];
            numSet.erase(numSet.begin() + tmp);
            k = k - tmp * pTable[n - 1];
            n--;
        }
        return result;
    }
};