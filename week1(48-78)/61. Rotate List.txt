Given a list, rotate the list to the right by k places, where k is non-negative.

For example:
Given 1->2->3->4->5->NULL and k = 2,
return 4->5->1->2->3->NULL.


/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* rotateRight(ListNode* head, int k) {
        if (!head) return head;
        int len = 1;
        ListNode* newH, *tail;
        newH = tail = head;
        while (tail->next){
            len++;
            tail = tail->next;
        }
        tail->next = head; //circle the link
        if (k %= len)//important;
        {
           for (int i = 0; i < len - k; i++) tail = tail -> next;
        }
        newH = tail->next;
        tail->next = NULL;//awesome
        return newH;
        
    }
};