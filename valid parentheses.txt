Given a string containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.

The brackets must close in the correct order, "()" and "()[]{}" are all valid but "(]" and "([)]" are not.

class Solution {
public:
    bool isValid(string s) {
        stack<char> par;
        for (auto& c : s)
        {
            switch (c) {
                case '(' :
                case '{' :
                case '[' : par.push(c); break;
                case ')' : if(par.empty() || par.top() != '(') return false; else par.pop(); break;
                case ']' : if(par.empty() || par.top() != '[') return false; else par.pop(); break;
                case '}' : if(par.empty() || par.top() != '{') return false; else par.pop(); break;
                default: ;
            }
        }
        return par.empty();
    }
};