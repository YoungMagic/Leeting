Given an array S of n integers, find three integers in S such that the sum is closest to a given number, target. Return the sum of the three integers. 
You may assume that each input would have exactly one solution.


class Solution {
public:
    int threeSumClosest(vector<int>& nums, int target) {
        if(nums.size() < 3) return 5;
        sort(nums.begin(), nums.end());
        int clo = nums[0] + nums[1] + nums[2];
        
        for (int i = 0; i != nums.size() - 2; i++)
        {
            int l = i + 1, r = nums.size() - 1;
            while(l != r)
            {
                int curSum = nums[i] + nums[l] + nums[r];
                if (curSum == target)
                return curSum;
                if (abs(target -curSum) < abs(target - clo))
                clo = curSum;
                if (curSum > target)
                r--;
                else 
                l++;
                
                //ves.push_back(vector<int>{nums[i], nums[r], nums[n]});
                
            }
        }
        return clo;
    }
};
